const rp = require('request-promise')
const ical2json = require('ical2json')

//cal setup script

  function formatDate(date) {
    var strYear = icalStr.substr(0,4);
    var strMonth = parseInt(icalStr.substr(4,2),10) - 1;
    var strDay = icalStr.substr(6,2);
    var strHour = icalStr.substr(9,2);
    var strMin = icalStr.substr(11,2);
    var strSec = icalStr.substr(13,2);

    return new Date(strYear,strMonth, st)
  }


    function todaysDate(currentTimeZone) {
      var options = {
        timeZone: currentTimeZone,
        year: 'numeric', month: 'numeric', day: 'numeric',
        hour: 'numeric', minute: 'numeric', second: 'numeric',
      }

      formatter = new Intl.DateTimeFormat([], options)
      return formatter.format(new Date())
    }

module.exports = (robot) => {
    let awaitingUrl = false, awaitingWorkHours = false, calSetupDone = false


    robot.respond(/(cal setup)/i, function(msg) {
      msg.reply("Woof woof! Welcome to the cal setup wizard. \n \n Please enter your fastmail accountâ€™s free/busy calendar URL so I can share your availability upon request.\n\n (To access your free/busy calendar URL visit www.fastmail.com/calendar/ while logged in.\n Select the calendar dropdown > settings > calendars > Edit&share > check free/busy information > copy the url > hit save up top > paste URL in chat and hit enter)")
     awaitingUrl = true
    })

    robot.hear(/^(http|https)/i ,function(msg) {
       if (awaitingUrl) {
	  robot.brain.set(msg.message.user.id, {busyCalUrl: msg.message.text})
	  msg.reply("Woof woof! URL was received... \n \n Excellent, now I need to know your preferred working hours when you will be available for meetings. \n \n Please enter them in the following format: <hr:min>-<hr:min> (e.g. 9:00-5:00)")
          awaitingUrl = false
          awaitingWorkHours = true
      }
    })

   robot.hear(/([0-9]|[0-9][0-9]):[0-5][0-9]-([0-9]|[0-9][0-9]):[0-5][0-9]/i ,function(msg) {
     if (awaitingWorkHours) {
         robot.brain.set(msg.message.user.id, {busyCalUrl: robot.brain.get(msg.message.user.id).busyCalUrl, workHrs: msg.message.text})
         msg.reply("Woof woof! Thank you for completing the cal setup wizard!, you may now use the `@doge cal suggest` feature.")
         awaitingWorkHours = false
         calSetupDone = true
     }
   })


   robot.respond(/(cal suggest)/i ,function(msg) {
     //if (!calSetupDone) {
	//msg.reply("Woof woof! To use the `@doge cal suggest` feature you must first go through the setup wizard. Do so by typing the command `@doge cal setup`.")
     //} else {
         rp(robot.brain.get(msg.message.user.id).busyCalUrl)
         .then((response)=> {
           let output = ical2json.convert(response);
           let outputdateArr = output.VCALENDAR[0].VEVENT
           console.log('here it is!!!!!!', output.VCALENDAR[0])
           msg.reply("YOUR TIMEZONE: " + output.VCALENDAR[0]["X-WR-TIMEZONE"])
           console.log('todays date', todaysDate(output.VCALENDAR[0]["X-WR-TIMEZONE"]))
           let todaysdate = todaysDate(output.VCALENDAR[0]["X-WR-TIMEZONE"])

//         outputdateArr.forEach(date => {
              



  //        })

         }).catch((err)=> {
           msg.reply("in err")
           msg.reply(err)
         })
       //}
   })
}

